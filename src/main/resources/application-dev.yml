# 开发环境配置
# 数据源配置，修改为项目的实际配置
server:
  port: 9090

spring:
  datasource:
    # 配置数据源类型
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT
    username: root
    password: root
    # 连接池配置：初始化、最小、最大连接数
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000 #配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 90000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: SELECT 1 FROM DUAL # 系统启动时通过该sql语句验证数据库是否可用，如果不配置validationQuery，则下面三项无
      test-while-idle: true #启用空闲连接检测，以便回收
      test-on-borrow: false # 从连接池获取连接时，是否检测连接可用性，开启性能会有些许影响
      test-on-return: false # 释放连接到连接池时，是否检测连接可用性，开启性能会有些许影响
      # PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 0
      # 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall  'wall'用于防火墙
      filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
  # 热部署
  devtools:
    restart:
      enabled: true #设置开启热部署
      additional-paths: src/main/java #需要实时更新的目录
  # freemarker:
  #   cache: false #页面不加载缓存，修改即时生效



